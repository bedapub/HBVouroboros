import os

configfile: "config/config.yaml"
if config['doSim'] == True:
	genomeId = config['genomeId']
	sampNum = config['sampNum']
	pairedEndDist = config['pairedEndDist']
	readLen = config['readLen']
	mt = config['mt']
	mp = config['mp']
	mtPos = config['mtPos']

	stream = os.system ("python RNAsim2/bin/RNAsim.py '{}' '{}' '{}' '{}' '{}' '{}' '{}' " .format(genomeId, 	 sampNum, pairedEndDist, readLen, mt, mp, mtPos))
	sample_annotation = config['sample_annotation_sm']
else:
	sample_annotation = config['sample_annotation']



include: "rules/common.smk"
include: "rules/build_refgenomes.smk"
include: "rules/align_reads.smk"
include: "rules/freebayes_vc.smk"

rule all:
    input:
        "results/stats/samples.mapping.flagstat",
        "results/coverage/infref_genome_count.tsv",
	"results/coverage/inpt_genome_count.tsv",
        "results/coverage/infref_genome_depth.tsv",
	"results/coverage/inpt_genome_depth.tsv",
        "results/coverage/infref_genome_gene_coverage.gct",
	"results/coverage/inpt_genome_gene_coverage.gct",
	"results/coverage/infref_genome_CDS_coverage.gct",
        "results/coverage/inpt_genome_CDS_coverage.gct",
        "results/variant-calling/infref/infref_aggregated.vcf",
	"results/variant-calling/inpt/inpt_aggregated.vcf"
	#"results/persamp_blast/Sample1_blast.out"
